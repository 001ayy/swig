{
    "filters": {
        "add": {
            "title": "add(value)",
            "desc": "Adds the value to the variable. Strings that can be converted to integers will be summed, not concatenated, as in the example below.",
            "args": [
                {
                    "name": "value",
                    "type": "mixed",
                    "desc": "The value to add to the variable before printing it to the page. Accepts any <code>array</code>, <code>object</code>, <code>number</code>, and <code>string</code>."
                }
            ]
        },
        "addslashes": {
            "title": "addslashes",
            "desc": "Returns a string with backslashes in front of characters that need to be quoted for database queries, etc."
        },
        "capitalize": {
            "title": "capitalize",
            "desc": "Capitalize the first character in the string."
        },
        "date": {
            "title": "date(format[, tzOffset])",
            "desc": "Convert a valid date into a format as specified. Mostly conforms to <a href=\"http://php.net/date\">php.net's date formatting</a>.",
            "args": [
                {
                    "name": "format",
                    "type": "string",
                    "desc": "The format to convert the date to. See the date formatting table for formatting options."
                },
                {
                    "name": "tzOffset",
                    "optional": true,
                    "type": "number",
                    "desc": "The timezone offset in minutes from GMT to display the date in."
                }
            ],
            "inc": "docs/filters/date.html"
        },
        "default": {
            "title": "default(value)",
            "desc": "If the variable is <code>undefined</code>, <code>null</code>, or <code>false</code>, a default return value can be specified.",
            "args": [
                {
                    "name": "value",
                    "type": "mixed",
                    "desc": "Fallback value if the variable is falsy."
                }
            ]
        },
        "e": {
            "title": "e",
            "desc": "Shortcut for <a href=\"#escape\">escape</a>"
        },
        "escape": {
            "title": "escape([type])",
            "desc": "Force escape the output of the variable. Optionally use <code>e</code> as a shortcut filter name. This filter will be applied by default if <var>autoescape</var> is turned on.",
            "args": [
                {
                    "name": "type",
                    "optional": true,
                    "type": "If you pass the string <samp>js</samp> in as the type, output will be escaped so that it is safe for JavaScript execution."
                }
            ],
            "inc": "docs/filters/escape.html"
        },
        "first": {
            "title": "first",
            "desc": "Returns the first element of an array."
        },
        "join": {
            "title": "join(glue)",
            "desc": "If the value is an Array, you can join each value with a delimiter and return it as a string.",
            "args": [
                {
                    "name": "glue",
                    "type": "string",
                    "desc": "Concatenation string to join each item in the array with."
                }
            ]
        },
        "json_encode": {
            "title": "json_encode([indent])",
            "desc": "Return a json-encoded string of the input.",
            "args": [
                {
                    "name": "indent",
                    "optional": true,
                    "type": "number",
                    "desc": "If greater than zero, the JSON will be pretty-printed using the number of spaces specified by the"
                }
            ]
        },
        "last": {
            "title": "last",
            "desc": "Returns the last element of an array."
        },
        "length": {
            "title": "length",
            "desc": "Return the <code>length</code> property of the input. If the input is an <code>object</code>, returns the number of keys on the object."
        },
        "lower": {
            "title": "lower",
            "desc": "Return the input in all lowercase letters."
        },
        "raw": {
            "title": "raw",
            "desc": "Forces the input to not be auto-escaped."
        },
        "replace": {
            "title": "replace(search, replace[, flags])",
            "desc": "Uses built-in JavaScript replace method. Provide a regular-expression or a string and a replacement string.",
            "args": [
                {
                    "name": "search",
                    "type": "string",
                    "desc": "string or regular expression to find"
                },
                {
                    "name": "replace",
                    "type": "string",
                    "desc": "string that will replace the matched parts from <var>search</var>"
                },
                {
                    "name": "flags",
                    "optional": true,
                    "type": "string",
                    "desc": "Regular expression flags. <a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Regular_Expressions#Advanced_Searching_With_Flags\">[reference]</a>"
                }
            ]
        }
    }
}
